{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","Clock","state","today","clockName","timerId","nameId","this","setState","window","setInterval","console","info","toLocaleTimeString","document","oncontextmenu","clearInterval","className","Component","App","hide","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAUX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIN,KACXO,UAAW,UACXC,QAAS,EACTC,OAAQ,GALZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZH,QAASI,OAAOC,aAAY,WAC1B,EAAKF,SAAS,CAAEL,MAAO,IAAIN,OAE3Bc,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,wBAC7B,OAGLN,KAAKC,SAAS,CACZF,OAAQG,OAAOC,aAAY,WACzB,EAAKF,SAAS,CAAEJ,UAAWT,QAC1B,QAGLmB,SAASC,cAAgB,kBAAM,KAvBnC,kCA0BE,WACED,SAASC,cAAgB,kBAAM,GAC/BN,OAAOO,cAAcT,KAAKL,MAAMI,QAChCG,OAAOO,cAAcT,KAAKL,MAAMG,WA7BpC,oBAgCE,WACE,MAGIE,KAAKL,MAFPC,EADF,EACEA,MACAC,EAFF,EAEEA,UAGF,OAEE,sBAAKa,UAAU,QAAf,UAEE,wBAAQA,UAAU,cAAlB,SACGb,IAGF,YAED,sBAAMa,UAAU,cAAhB,SACGd,EAAMU,8BAjDjB,GAA2BK,aCPdC,EAAb,4MACEjB,MAAQ,CACNkB,MAAM,GAFV,uDAKE,WAAqB,IAAD,OAClBN,SAASO,iBAAiB,SAAS,WACjC,EAAKb,SAAS,CAAEY,MAAM,OAGxBN,SAASO,iBAAiB,eAAe,WACvC,EAAKb,SAAS,CAAEY,MAAM,SAX5B,oBAeE,WACE,IACEA,EACEb,KAAKL,MADPkB,KAGF,OACE,sBAAKH,UAAU,MAAf,UACE,6CAECG,GAAQ,cAAC,EAAD,WAxBjB,GAAyBF,aCLzBI,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.6ab9772b.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  today: Date,\n  clockName: string,\n  timerId: number,\n  nameId: number,\n};\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    timerId: 0,\n    nameId: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: window.setInterval(() => {\n        this.setState({ today: new Date() });\n        // eslint-disable-next-line react/no-access-state-in-setstate,no-console\n        console.info(this.state.today.toLocaleTimeString());\n      }, 1000),\n    });\n\n    this.setState({\n      nameId: window.setInterval(() => {\n        this.setState({ clockName: getRandomName() });\n      }, 3300),\n    });\n\n    document.oncontextmenu = () => true;\n  }\n\n  componentWillUnmount() {\n    document.oncontextmenu = () => false;\n    window.clearInterval(this.state.nameId);\n    window.clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const {\n      today,\n      clockName,\n    } = this.state;\n\n    return (\n\n      <div className=\"Clock\">\n\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n\n      </div>\n\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hide: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hide: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hide: true });\n    });\n\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hide: false });\n    });\n  }\n\n  render() {\n    const {\n      hide,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hide || <Clock />}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}